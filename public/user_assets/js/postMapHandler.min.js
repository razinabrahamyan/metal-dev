/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!****************************************************!*\
  !*** ./resources/user_assets/js/postMapHandler.js ***!
  \****************************************************/
function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

new Vue({
  el: "#post-map-container",
  data: {
    postsPage: 1,
    lastPage: 1,
    posts: [],
    city: filters.city,
    market: filters.market,
    category: filters.category,
    subCategory: filters.subCategory,
    formData: undefined
  },
  methods: {
    search: function search() {
      var _this = this;

      var params = {
        page: this.postsPage
      };

      if (this.formData !== undefined) {
        var _iterator = _createForOfIteratorHelper(this.formData.entries()),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var pair = _step.value;
            params[pair[0]] = pair[1];
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }

      axios.get('/axios/post/map/search', {
        params: params
      }).then(function (response) {
        _this.posts = response.data.posts.data;
        _this.lastPage = response.data.posts.last_page;
        postMapHandler.posts = JSON.parse(JSON.stringify(response.data.posts.data));
        ymaps.ready(postMapHandler.init);
      })["catch"](function (e) {
        AlertNotification.alertSuccess(e.message);
      });
    },
    submitFilter: function submitFilter(e) {
      e.preventDefault();
      this.postsPage = 1;
      this.formData = new FormData(e.target);
      this.search();
    },
    nextPage: function nextPage() {
      if (this.postsPage < this.lastPage) {
        this.postsPage++;
        this.search();
      }
    },
    previousPage: function previousPage() {
      if (this.postsPage > 1) {
        this.postsPage--;
        this.search();
      }
    }
  },
  mounted: function mounted() {
    $('body').addClass('active-filters'); // $('.select2').select2({
    //     minimumResultsForSearch: -1,
    // });

    this.search();
  }
});
/******/ })()
;