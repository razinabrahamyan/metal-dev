/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!*********************************************************!*\
  !*** ./resources/user_assets/js/profileLeadsHandler.js ***!
  \*********************************************************/
new Vue({
  el: ".profile_leads",
  data: {
    leads: [],
    leadTypes: [],
    page: 1,
    lastPage: 1
  },
  methods: {
    searchLeads: function searchLeads() {
      var _this = this;

      axios.get('/axios/profile/leads', {
        params: {
          user_id: leadFilter.userId,
          page: this.page
        }
      }).then(function (response) {
        _this.leads = response.data.leads.data;
        _this.leadTypes = response.data.leadTypes;
        _this.lastPage = response.data.leads.last_page;
      })["catch"](function (e) {
        AlertNotification.alertSuccess(e.message);
      });
    },
    copyText: function copyText(e) {
      DomHelpers.copyTextFromElement(e.target);
    },
    deletePost: function deletePost(leadId) {
      Swal.fire({
        title: '<p style="color: #ffffff;font-size: 23px;">Удалить заявку?</p>',
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Удалить!',
        cancelButtonText: 'Отмена',
        background: 'rgba(0,0,0,0.6)',
        iconColor: '#3085d6'
      }).then(function (result) {
        if (result.isConfirmed) {
          axios.post('/axios/profile/leads/delete', {
            leadId: leadId
          }).then(function (response) {
            $('[data-lead-id=' + leadId + ']').remove();
            AlertNotification.alertSuccess(response.data.alertMessage);
          })["catch"](function (e) {
            AlertNotification.alertSuccess(e.message);
          });
        }
      });
    },
    nextPage: function nextPage() {
      if (this.page < this.lastPage) {
        this.page++;
        this.searchLeads();
      }
    },
    prevPage: function prevPage() {
      if (this.page > 1) {
        this.page--;
        this.searchLeads();
      }
    }
  },
  mounted: function mounted() {
    this.searchLeads();
  }
});
/******/ })()
;