/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!*****************************************************!*\
  !*** ./resources/user_assets/js/postShowHandler.js ***!
  \*****************************************************/
new Vue({
  el: ".post-show-container",
  data: {},
  methods: {
    callbackPopup: function callbackPopup() {
      Swal.fire({
        title: 'Оставьте контактные данные',
        html: "<input type=\"text\" id=\"full_name\" class=\"swal2-input\" placeholder=\"\u0424.\u0418.\u041E.\">\n                       <input type=\"text\" id=\"callback_phone\" class=\"swal2-input addQMask\" placeholder=\"\u041D\u043E\u043C\u0435\u0440 \u0442\u0435\u043B\u0435\u0444\u043E\u043D\u0430\">\n                       <input type=\"email\" id=\"callback_email\" class=\"swal2-input\" placeholder=\"Email\">\n                       <textarea id=\"callback_textarea\" class=\"swal2-textarea\" placeholder=\"\u041A\u043E\u043C\u043C\u0435\u043D\u0442\u0430\u0440\u0438\u0439\"></textarea>",
        confirmButtonColor: '#ffa737',
        confirmButtonText: 'Заказать звонок',
        showCancelButton: false,
        showLoaderOnConfirm: true,
        showCloseButton: true,
        preConfirm: function preConfirm() {
          var full_name = Swal.getPopup().querySelector('#full_name').value;
          var callback_phone = Swal.getPopup().querySelector('#callback_phone').value;
          var callback_email = Swal.getPopup().querySelector('#callback_email').value;
          var callback_textarea = Swal.getPopup().querySelector('#callback_textarea').value;

          if (!full_name || !callback_phone) {
            Swal.showValidationMessage("\u0417\u0430\u043F\u043E\u043B\u043D\u0438\u0442\u0435 \u0432\u0441\u0435 \u043F\u043E\u043B\u044F");
          }

          return {
            full_name: full_name,
            callback_phone: callback_phone,
            callback_email: callback_email,
            callback_textarea: callback_textarea
          };
        },
        allowOutsideClick: function allowOutsideClick() {
          return !Swal.isLoading();
        }
      }).then(function (result) {
        if (result.isConfirmed) {
          axios.post('/axios/post/callback-order', {
            "full_name": "".concat(result.value.full_name),
            "callback_phone": "".concat(result.value.callback_phone),
            "callback_email": "".concat(result.value.callback_email),
            "callback_textarea": "".concat(result.value.callback_textarea),
            "post_id": postId
          }).then(function (response) {
            var data = response.data;
            Swal.fire({
              icon: data.success,
              title: data.alertMessage,
              showCloseButton: true,
              confirmButtonColor: '#ffa737',
              confirmButtonText: 'Закрыть'
            });
          })["catch"](function (e) {
            console.log(e);
          });
        }
      }); //Add mask on phone field

      phoneHandler.addMask();
    }
  },
  mounted: function mounted() {}
});
/******/ })()
;